{"version":3,"sources":["border-radius.js"],"names":["define","langx","borders","_WIDTHS_R","BorderRadius","klass","klassName","topLeft","alias","get","this","_","set","v","topRight","bottomRight","bottomLeft","getAll","setAll","a","_setupAttributeValues","clone","equal","target","notEqual","toString","toArray","toPlain","l","t","r","b","_construct","undefined","mixin","fromArray","length","fromPlain","o","fromString","s","match","fromCss","css","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","toCss","br"],"mappings":"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","file":"../border-radius.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./borders\"\r\n], function(langx,borders) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d+\\D*\\s*/g;\r\n\r\n    var BorderRadius = langx.klass({\r\n        \"klassName\": \"BorderRadius\",\r\n\r\n        \"topLeft\": {\r\n            \"alias\" : \"tl\",\r\n            \"get\" : function() {\r\n                return this._.topLeft;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.topLeft = v;\r\n            }  \r\n        },\r\n\r\n        \"topRight\": {\r\n            \"alias\" : \"tr\",\r\n            \"get\" : function() {\r\n                return this._.topRight;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.topRight = v;\r\n            }  \r\n        },\r\n\r\n        \"bottomRight\": {\r\n            \"alias\" : \"br\",\r\n            \"get\" : function() {\r\n                return this._.bottomRight;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.bottomRight = v;\r\n            }  \r\n        },\r\n\r\n        \"bottomLeft\": {\r\n            \"alias\" : \"bl\",\r\n            \"get\" : function() {\r\n                return this._.bottomLeft;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.bottomLeft = v;\r\n            }  \r\n\r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.topLeft == this.topRight && this.topLeft == this.bottomRight && this.topLeft == this.bottomLeft) {\r\n                return this.topLeft;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._setupAttributeValues({\r\n                \"topLeft\": a,\r\n                \"topRight\": a,\r\n                \"bottomRight\": a,\r\n                \"bottomLeft\": a\r\n            });\r\n        },\r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new BorderRadius(_.topLeft,_.topRight,_.bottomRight,_.bottomLeft);\r\n        \r\n        },\r\n        equal: function(target) {\r\n            return !this.notEqual(target);\r\n        },\r\n\r\n        notEqual: function(target) {\r\n            if (!target) {\r\n                return false;\r\n            } \r\n            var s1 = this.toString(),\r\n                s2 = target.toString();\r\n            return s1 != s2 ;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.topLeft,this.topRight,this.bottomRight,this.bottomLeft];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"topLeft\"  : this.topLeft,\r\n                \"topRight\"  : this.topRight,\r\n                \"bottomRight\"  : this.bottomRight,\r\n                \"bottomLeft\"  : this.bottomLeft\r\n            }\r\n        },\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.topLeft.toString(),\r\n                t = this.topRight.toString(),\r\n                r = this.bottomRight.toString(),\r\n                b = this.bottomLeft.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n        \"_construct\": function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l !== undefined) {\r\n                    b = l;\r\n                    l = r;\r\n                } else if (r !== undefined) {\r\n                    b = t;\r\n                    l = r;\r\n\r\n                } else if (t !== undefined) {\r\n                    b = l = r = t;\r\n                } else {\r\n                    b = l = r = t = 0;\r\n                }\r\n            }\r\n            this._ = {\r\n                \"topLeft\": l,\r\n                \"topRight\": r,\r\n                \"bottomLeft\": t,\r\n                \"bottomRight\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    langx.mixin(BorderRadius, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new BorderRadius(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new BorderRadius(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new BorderRadius(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new BorderRadius(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new BorderRadius(o.topLeft,o.topRight,o.bottomRight,o.bottomLeft);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a.length;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n            }\r\n            return new BorderRadius(t,r,l,b);\r\n        }\r\n\r\n    });\r\n\r\n    BorderRadius.fromCss = function(css) {\r\n        if (css.borderTopLeftRadius != undefined &&\r\n            css.borderTopRightRadius != undefined &&\r\n            css.borderBottomRightRadius != undefined &&\r\n            css.borderBottomLeftRadius != undefined) {\r\n            return new BorderRadius(\r\n                        css.borderTopLeftRadius,\r\n                        css.borderTopRightRadius,\r\n                        css.borderBottomRightRadius,\r\n                        css.borderBottomLeftRadius\r\n                    );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    BorderRadius.toCss = function(br,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (br) {\r\n            css.borderTopLeftRadius = br.topLeft.toString();\r\n            css.borderTopRightRadius = br.topRight.toString();\r\n            css.borderBottomRightRadius = br.bottomRight.toString();\r\n            css.borderBottomLeftRadius = br.bottomLeft.toString();        \r\n        }\r\n\r\n        return css;\r\n    };\r\n\r\n    return BorderRadius;\r\n});\r\n"]}