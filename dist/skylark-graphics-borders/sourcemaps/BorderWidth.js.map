{"version":3,"sources":["BorderWidth.js"],"names":["define","langx","borders","_WIDTHS_R","BorderWidth","klass","klassName","left","alias","get","this","_","set","v","top","right","bottom","getAll","setAll","a","_setupAttributeValues","clone","equal","target","notEqual","toString","toArray","toPlain","t","r","l","b","_construct","undefined","Object","mixin","fromArray","length","fromPlain","o","fromString","s","match","Zero","fromCss","css","borderTopWidth","borderRightWidth","borderLeftWidth","borderBottomWidth","toCss","bw"],"mappings":"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","file":"../BorderWidth.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./borders\"\r\n], function(langx,borders) {\r\n    \r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d+\\D*\\s*/g;\r\n\r\n    var BorderWidth = langx.klass({\r\n        \"klassName\": \"BorderWidth\",\r\n\r\n        \"left\": {\r\n            \"alias\" : \"l\",\r\n            \"get\" : function() {\r\n                return this._.left;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.left = v;\r\n            }            \r\n        },\r\n\r\n        \"top\": {\r\n            \"alias\" : \"t\",\r\n            \"get\" : function() {\r\n                return this._.top;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.top = v;\r\n            }            \r\n        },\r\n\r\n        \"right\": {\r\n            \"alias\" : \"r\",\r\n            \"get\" : function() {\r\n                return this._.right;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.right = v;\r\n            }            \r\n        },\r\n\r\n        \"bottom\": {\r\n            \"alias\" : \"b\",\r\n            \"get\" : function() {\r\n                return this._.bottom;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.bottom = v;\r\n            }            \r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._setupAttributeValues({\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            });\r\n        },\r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new BorderWidth(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n        equal: function(target) {\r\n            return !this.notEqual(target);\r\n        },\r\n\r\n        notEqual: function(target) {\r\n            if (!target) {\r\n                return false;\r\n            } \r\n            var s1 = this.toString(),\r\n                s2 = target.toString();\r\n            return s1 != s2 ;\r\n        },\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"t\"  : this.top,\r\n                \"r\"  : this.right,\r\n                \"l\"  : this.left,\r\n                \"b\"  : this.bottom\r\n            }\r\n        },\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.left.toString(),\r\n                t = this.top.toString(),\r\n                r = this.right.toString(),\r\n                b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n        },\r\n\r\n        \"_construct\": function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l !== undefined) {\r\n                    b = l;\r\n                    l = r;\r\n                } else if (r !== undefined) {\r\n                    b = t;\r\n                    l = r;\r\n\r\n                } else if (t !== undefined) {\r\n                    b = l = r = t;\r\n                } else {\r\n                    b = l = r = t = 0;\r\n                }\r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    Object.mixin(BorderWidth, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new BorderWidth(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new BorderWidth(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new BorderWidth(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new BorderWidth(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new BorderWidth(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a ? a.length : 0;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n                 default :\r\n                    t = r = l = b = null;\r\n                    break;                    \r\n           }\r\n            return new BorderWidth(t,r,l,b);\r\n        },\r\n\r\n        Zero: new BorderWidth(0)\r\n    });\r\n\r\n    BorderWidth.fromCss = function(css) {\r\n       return new BorderWidth(\r\n                    css.borderTopWidth,\r\n                    css.borderRightWidth,\r\n                    css.borderLeftWidth,\r\n                    css.borderBottomWidth\r\n                );\r\n    };\r\n\r\n    BorderWidth.toCss = function(bw,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (bw) {\r\n            css.borderTopWidth = bw.top.toString();\r\n            css.borderRightWidth = bw.right.toString();\r\n            css.borderLeftWidth = bw.left.toString();\r\n            css.borderBottomWidth = bw.bottom.toString();\r\n        }\r\n\r\n        return css;\r\n    };\r\n\r\n    return borders.BorderWidth = BorderWidth;\r\n});\r\n"]}