{"version":3,"sources":["BorderImageOutset.js"],"names":["define","langx","borders","_WIDTHS_R","BorderImageOutset","klass","klassName","left","type","Number","alias","get","this","_","set","v","top","right","bottom","getAll","setAll","a","_setupAttributeValues","clone","equale","target","notEqual","toArray","toPlain","t","r","l","b","toString","_construct","undefined","mixin","fromArray","length","fromPlain","o","fromString","s","match","Zero","fromCss","css","borderImageOutset","toCss","bio"],"mappings":"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","file":"../BorderImageOutset.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./borders\"\r\n], function(langx,borders) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d+\\s*/g;\r\n\r\n    var BorderImageOutset = langx.klass({\r\n\r\n        \"klassName\": \"BorderImageOutset\",\r\n\r\n        \"left\": {\r\n            \"type\": Number,\r\n            \"alias\" : \"l\",\r\n            \"get\" : function() {\r\n                return this._.left;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.left = v;\r\n            }            \r\n        },\r\n\r\n        \"top\": {\r\n            \"type\": Number,\r\n            \"alias\" : \"t\",\r\n            \"get\" : function() {\r\n                return this._.top;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.top = v;\r\n            }            \r\n        },\r\n\r\n        \"right\": {\r\n            \"type\": Number,\r\n            \"alias\" : \"r\",\r\n            \"get\" : function() {\r\n                return this._.right;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.right = v;\r\n            }            \r\n        },\r\n\r\n        \"bottom\": {\r\n            \"type\": Number,\r\n            \"alias\" : \"b\",\r\n            \"get\" : function() {\r\n                return this._.bottom;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.bottom = v;\r\n            }            \r\n        },\r\n\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._setupAttributeValues({\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            });\r\n        },\r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new BorderImageOutset(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n        equale: function(target) {\r\n            return !this.notEqual(target);\r\n        },\r\n\r\n        notEqual: function(target) {\r\n            return !target ||\r\n                    this.left != target.left ||\r\n                    this.top != target.top ||\r\n                    this.right != target.right ||\r\n                    this.bottom != target.bottom;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"t\"  : this.top,\r\n                \"r\"  : this.right,\r\n                \"l\"  : this.left,\r\n                \"b\"  : this.bottom\r\n            }\r\n        },\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = this.left.toString(),\r\n                t = this.top.toString(),\r\n                r = this.right.toString(),\r\n                b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n        \"_construct\": function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l !== undefined) {\r\n                    b = l;\r\n                    l = r;\r\n                } else if (r !== undefined) {\r\n                    b = t;\r\n                    l = r;\r\n\r\n                } else if (t !== undefined) {\r\n                    b = l = r = t;\r\n                } else {\r\n                    b = l = r = t = 0;\r\n                }\r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    langx.mixin(BorderImageOutset, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new BorderImageOutset(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new BorderImageOutset(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new BorderImageOutset(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new BorderImageOutset(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new BorderImageOutset(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a ? a.length : 0;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n                default :\r\n                    t = r = l = b = null;\r\n                    break;                    \r\n            }\r\n            return new BorderImageOutset(t,r,l,b);\r\n        },\r\n\r\n        Zero: new BorderImageOutset(0)\r\n    });\r\n\r\n    BorderImageOutset.fromCss = function(css) {\r\n        if (css.borderImageOutset) {\r\n            return BorderImageOutset.fromString(css.borderImageOutset);\r\n       } else {\r\n            return null;\r\n       }\r\n    };\r\n\r\n    BorderImageOutset.toCss = function(bio,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (bio) {\r\n            css.borderImageOutset = bio.toString();\r\n        }\r\n\r\n        return css;\r\n    };\r\n\r\n    return borders.BorderImageOutset = BorderImageOutset;\r\n});\r\n"]}