{"version":3,"sources":["BorderImage.js"],"names":["define","langx","BorderImageSlice","borders","ImageBrush","BorderImageOutset","BorderImageRepeat","BorderImage","klass","klassName","outset","type","get","this","_","set","v","repeat","slice","source","width","_construct","params","fromPlain","o","fromCss","css","borderImageOutset","borderImageRepeat","borderImageSlice","borderImageSource","borderImageWidth","toCss","bi","toString"],"mappings":";;;;;;;AAAAA,QACI,sBACA,sCACA,YACA,sBACA,sBACA,sBACF,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAcN,EAAMO,OAEpBC,UAAiB,cAEjBC,QACIC,KAAON,EACPO,IAAQ,WACJ,OAAOC,KAAKC,EAAEJ,QAElBK,IAAQ,SAASC,GACbH,KAAKC,EAAEJ,OAASM,IAGxBC,QACIN,KAAOL,EACPM,IAAQ,WACJ,OAAOC,KAAKC,EAAEG,QAElBF,IAAQ,SAASC,GACbH,KAAKC,EAAEG,OAASD,IAGxBE,OACIP,KAAOT,EACPU,IAAQ,WACJ,OAAOC,KAAKC,EAAEI,OAElBH,IAAQ,SAASC,GACbH,KAAKC,EAAEI,MAAQF,IAGvBG,QACIR,KAAOP,EACPQ,IAAQ,WACJ,OAAOC,KAAKC,EAAEK,QAElBJ,IAAQ,SAASC,GACbH,KAAKC,EAAEK,OAASH,IAGxBI,OAEIR,IAAQ,WACJ,OAAOC,KAAKC,EAAEM,OAElBL,IAAQ,SAASC,GACbH,KAAKC,EAAEM,MAAQJ,IAGvBK,WAAe,SAASC,GACpBT,KAAKC,GACDJ,OAASY,EAAOZ,OAChBO,OAASK,EAAOL,OAChBC,MAASI,EAAOJ,MAChBC,OAASG,EAAOH,OAChBC,MAASE,EAAOF,UAuD5B,OAlDAb,EAAYgB,UAAY,SAASC,GAE9B,OAAO,IAAIjB,GACNG,OAASc,EAAEd,OACXO,OAAYO,EAAEP,OACdC,MAAWM,EAAEN,MACbC,OAAcK,EAAEL,OAChBC,MAAOI,EAAEJ,SAIjBb,EAAYkB,QAAU,SAASC,GAC3B,OAAOnB,EAAYgB,WACfb,OAAUgB,EAAIC,kBACdV,OAAUS,EAAIE,kBACdV,MAAUQ,EAAIG,iBACdV,OAAUO,EAAII,kBACdV,MAAUM,EAAIK,oBAItBxB,EAAYyB,MAAQ,SAASC,EAAGP,GA0B5B,OAzBKA,IACDA,MAGAO,GAAMA,EAAGvB,SACTgB,EAAIC,kBAAoBM,EAAGvB,OAAOwB,YAGlCD,GAAMA,EAAGhB,SACTS,EAAIE,kBAAoBtB,EAAkB2B,EAAGhB,SAG7CgB,GAAMA,EAAGf,QACTQ,EAAIG,iBAAmBI,EAAGf,MAAMgB,YAGhCD,GAAMA,EAAGd,SACTO,EAAII,kBAAoBG,EAAGd,OAAOe,YAGlCD,GAAMA,EAAGb,QACTM,EAAIK,iBAAmBE,EAAGb,MAAMc,YAI7BR,GAGJvB,EAAQI,YAAcA","file":"../BorderImage.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-graphics-brushes/ImageBrush\",\r\n    \"./borders\",\r\n    \"./BorderImageOutset\",\r\n    \"./BorderImageRepeat\",\r\n    \"./BorderImageSlice\"\r\n],function(\r\n    langx,\r\n    BorderImageSlice,\r\n    borders,\r\n    ImageBrush,\r\n    BorderImageOutset,\r\n    BorderImageRepeat\r\n) {\r\n    var BorderImage = langx.klass({\r\n       \r\n        \"klassName\"  :   \"BorderImage\",\r\n\r\n        \"outset\"    :   {\r\n            type : BorderImageOutset,\r\n            \"get\" : function() {\r\n                return this._.outset;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.outset = v;\r\n            }            \r\n        },\r\n        \"repeat\" :   {\r\n            type : BorderImageRepeat,\r\n            \"get\" : function() {\r\n                return this._.repeat;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.repeat = v;\r\n            }            \r\n        },\r\n        \"slice\"    :   {\r\n            type : BorderImageSlice,\r\n            \"get\" : function() {\r\n                return this._.slice;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.slice = v;\r\n            }            \r\n        },\r\n        \"source\"  :   {\r\n            type : ImageBrush,\r\n            \"get\" : function() {\r\n                return this._.source;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.source = v;\r\n            }            \r\n        },\r\n        \"width\"    :   {\r\n            //type : MeasureValue,\r\n            \"get\" : function() {\r\n                return this._.width;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.width = v;\r\n            }            \r\n        },\r\n        \"_construct\" : function(params){\r\n            this._ = {\r\n                outset : params.outset,\r\n                repeat : params.repeat,\r\n                slice  : params.slice,\r\n                source : params.source,\r\n                width  : params.width\r\n            };\r\n        }\r\n    });\r\n\r\n    BorderImage.fromPlain = function(o) {\r\n\r\n       return new BorderImage({\r\n            outset : o.outset,\r\n            repeat    : o.repeat,\r\n            slice    : o.slice,\r\n            source      : o.source,\r\n            width: o.width\r\n        });\r\n    };\r\n\r\n    BorderImage.fromCss = function(css) {\r\n        return BorderImage.fromPlain({\r\n            outset  : css.borderImageOutset,\r\n            repeat  : css.borderImageRepeat,\r\n            slice   : css.borderImageSlice,\r\n            source  : css.borderImageSource,\r\n            width   : css.borderImageWidth\r\n        });\r\n    };\r\n\r\n    BorderImage.toCss = function(bi,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n\r\n        if (bi && bi.outset) {\r\n            css.borderImageOutset = bi.outset.toString();\r\n        }\r\n\r\n        if (bi && bi.repeat) {\r\n            css.borderImageRepeat = BorderImageRepeat[bi.repeat]; // bi.repeat.toString();\r\n        }\r\n\r\n        if (bi && bi.slice) {\r\n            css.borderImageSlice = bi.slice.toString();\r\n        }\r\n\r\n        if (bi && bi.source) {\r\n            css.borderImageSource = bi.source.toString();        \r\n        }\r\n\r\n        if (bi && bi.width) {\r\n            css.borderImageWidth = bi.width.toString();        \r\n        }\r\n\r\n\r\n        return css;\r\n    };\r\n\r\n    return borders.BorderImage = BorderImage;\r\n    \r\n}); \r\n"]}