{"version":3,"sources":["border-style.js"],"names":["define","langx","borders","BorderStyleType","_WIDTHS_R","BorderStyle","klass","klassName","left","alias","get","this","_","set","v","top","right","bottom","getAll","setAll","a","clone","equal","target","notEqual","toString","toArray","toPlain","t","r","l","b","_construct","undefined","Object","mixin","fromArray","length","fromPlain","o","fromString","s","match","fromCss","css","borderTopStyle","borderRightStyle","borderLeftStyle","borderBottomStyle","toCss","bs"],"mappings":"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","file":"../border-style.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./borders\",\r\n    \"./border-style-type\"\r\n], function(langx,borders,BorderStyleType) {\r\n    var _WIDTH_R = /\\d+/,\r\n        _WIDTHS_R = /\\d*\\D*\\s*/g;\r\n\r\n    var BorderStyle = langx.klass({\r\n        \"klassName\": \"BorderStyle\",\r\n\r\n        \"left\": {\r\n            //\"type\": Color,\r\n            \"alias\" : \"l\",\r\n            \"get\" : function() {\r\n                return this._.left;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.left = v;\r\n            }            \r\n        },\r\n\r\n        \"top\": {\r\n            //\"type\": Color,\r\n            \"alias\" : \"t\",\r\n            \"get\" : function() {\r\n                return this._.top;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.top = v;\r\n            }            \r\n        },\r\n\r\n        \"right\": {\r\n            //\"type\": Color,\r\n            \"alias\" : \"r\",\r\n            \"get\" : function() {\r\n                return this._.right;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.right = v;\r\n            }            \r\n        },\r\n\r\n        \"bottom\": {\r\n            //\"type\": Color,\r\n            \"alias\" : \"b\",\r\n            \"get\" : function() {\r\n                return this._.bottom;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.bottom = v;\r\n            }            \r\n        },\r\n\r\n        getAll: function() {\r\n            if (this.left == this.bottom && this.top == this.right && this.right == this.left) {\r\n                return this.left;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n\r\n        setAll: function(a) {\r\n            this._ = {\r\n                \"left\": a,\r\n                \"right\": a,\r\n                \"top\": a,\r\n                \"bottom\": a\r\n            };\r\n        },\r\n\r\n        \"clone\" : function(){\r\n            var _ = this._;\r\n            return new BorderStyle(_.top,_.right,_.left,_.bottom);\r\n        \r\n        },\r\n\r\n        equal: function(target) {\r\n            return !this.notEqual(target);\r\n        },\r\n\r\n        notEqual: function(target) {\r\n            if (!target) {\r\n                return false;\r\n            } \r\n            var s1 = this.toString(),\r\n                s2 = target.toString();\r\n            return s1 != s2 ;\r\n        },\r\n\r\n        toArray : function() {\r\n            return [this.top,this.right,this.left,this.bottom];\r\n        },\r\n\r\n        toPlain : function() {\r\n            return {\r\n                \"t\"  : this.top,\r\n                \"r\"  : this.right,\r\n                \"l\"  : this.left,\r\n                \"b\"  : this.bottom\r\n            }\r\n        },\r\n\r\n        \"toString\": function() {\r\n            var count = 0,\r\n                l = BorderStyleType[this.left], //l = this.left.toString(),\r\n                t = BorderStyleType[this.top], //t = this.top.toString(),\r\n                r = BorderStyleType[this.right],//r = this.right.toString(),\r\n                b = BorderStyleType[this.bottom]; //b = this.bottom.toString();\r\n            if (r == l) {\r\n                if (t == b) {\r\n                    if (t == r) {\r\n                        return t.toString();\r\n                    } else {\r\n                        return t + \" \" + r;\r\n                    }\r\n                } else {\r\n                    return t + \" \" + r + \" \" + b;\r\n                }\r\n            } else {\r\n                return t + \" \" + r + \" \" + l + \" \" + b;\r\n            }\r\n\r\n        },\r\n\r\n        \"_construct\": function(/*Number*/t, /*Number*/r, /*Number*/l, /*Number*/b) {\r\n            if (b === undefined) {\r\n                if (l !== undefined) {\r\n                    b = l;\r\n                    l = r;\r\n                } else if (r !== undefined) {\r\n                    b = t;\r\n                    l = r;\r\n\r\n                } else if (t !== undefined) {\r\n                    b = l = r = t;\r\n                } else {\r\n                    b = l = r = t = 0;\r\n                }\r\n            }\r\n            this._ = {\r\n                \"left\": l,\r\n                \"right\": r,\r\n                \"top\": t,\r\n                \"bottom\": b\r\n            };\r\n        }\r\n    });\r\n\r\n    Object.mixin(BorderStyle, {\r\n        \"fromArray\" : function(a) {\r\n            switch (a.length) {\r\n                case 1 : return new BorderStyle(a[0],a[0],a[0],a[0]);\r\n                case 2 : return new BorderStyle(a[0],a[1],a[1],a[0]);\r\n                case 3 : return new BorderStyle(a[0],a[1],a[1],a[0]);\r\n                case 4 : return new BorderStyle(a[0],a[1],a[1],a[0]);\r\n                default : return;\r\n            }\r\n        },\r\n        \"fromPlain\" : function(o) {\r\n            return new BorderStyle(o.t,o.r,o.l,o.b);\r\n        },\r\n        \"fromString\": function(s) {\r\n           var a = s.match(_WIDTHS_R);\r\n            var t,\r\n                r,\r\n                l,\r\n                b,\r\n                len = a ? a.length : 0;\r\n            //for (var i = 0; i < len; i++) {\r\n            //    a[i] = _WIDTH_R.exec(a[i]);\r\n            //    a[i] = parseInt(a[i]);\r\n            //}\r\n            switch (len) {\r\n                case 1:\r\n                    t = r = l = b = a[0];\r\n                    break;\r\n\r\n                case 2:\r\n                    t = b = a[0];\r\n                    r = l = a[1];\r\n                    break;\r\n                case 3:\r\n                    t = a[0];\r\n                    r = l = a[1];\r\n                    b = a[2]\r\n                    break;\r\n                case 4:\r\n                    t = a[0];\r\n                    r = a[1];\r\n                    l = a[2]\r\n                    b = a[3];\r\n                    break;\r\n            }\r\n            return new BorderStyle(t,r,l,b);\r\n        }\r\n    });\r\n\r\n    BorderStyle.fromCss = function(css) {\r\n        if (css.borderTopStyle != undefined &&\r\n            css.borderRightStyle != undefined &&\r\n            css.borderLeftStyle != undefined &&\r\n            css.borderBottomStyle != undefined) {\r\n           return new BorderStyle(\r\n                        BorderStyleType[css.borderTopStyle],\r\n                        BorderStyleType[css.borderRightStyle],\r\n                        BorderStyleType[css.borderLeftStyle],\r\n                        BorderStyleType[css.borderBottomStyle]\r\n                    );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    BorderStyle.toCss = function(bs,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n        if (bs) {\r\n            css.borderTopStyle = BorderStyleType[bs.top];//bs.top.toString();\r\n            css.borderRightStyle = BorderStyleType[bs.right];//bs.right.toString();\r\n            css.borderLeftStyle = BorderStyleType[bs.left];//bs.left.toString();\r\n            css.borderBottomStyle= BorderStyleType[bs.bottom]; //bs.bottom.toString();\r\n        }\r\n\r\n        return css;\r\n    };\r\n\r\n    return borders.BorderStyle = BorderStyle;\r\n});\r\n"]}