{"version":3,"sources":["BorderImage.js"],"names":["define","langx","BorderImageSlice","borders","ImageBrush","BorderImageOutset","BorderImageRepeat","BorderImage","klass","klassName","outset","type","get","this","_","set","v","repeat","slice","source","width","MeasureValue","_construct","params","fromPlain","o","fromCss","css","borderImageOutset","borderImageRepeat","borderImageSlice","borderImageSource","borderImageWidth","toCss","bi","toString"],"mappings":";;;;;;;AAAAA,QACI,sBACA,sCACA,YACA,sBACA,sBACA,sBACF,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAcN,EAAMO,OAEpBC,UAAiB,cAEjBC,QACIC,KAAON,EACPO,IAAQ,WACJ,OAAOC,KAAKC,EAAEJ,QAElBK,IAAQ,SAASC,GACbH,KAAKC,EAAEJ,OAASM,IAGxBC,QACIN,KAAOL,EACPM,IAAQ,WACJ,OAAOC,KAAKC,EAAEG,QAElBF,IAAQ,SAASC,GACbH,KAAKC,EAAEG,OAASD,IAGxBE,OACIP,KAAOT,EACPU,IAAQ,WACJ,OAAOC,KAAKC,EAAEI,OAElBH,IAAQ,SAASC,GACbH,KAAKC,EAAEI,MAAQF,IAGvBG,QACIR,KAAOP,EACPQ,IAAQ,WACJ,OAAOC,KAAKC,EAAEK,QAElBJ,IAAQ,SAASC,GACbH,KAAKC,EAAEK,OAASH,IAGxBI,OACIT,KAAOU,aACPT,IAAQ,WACJ,OAAOC,KAAKC,EAAEM,OAElBL,IAAQ,SAASC,GACbH,KAAKC,EAAEM,MAAQJ,IAGvBM,WAAe,SAASC,GACpBV,KAAKC,GACDJ,OAASa,EAAOb,OAChBO,OAASM,EAAON,OAChBC,MAASK,EAAOL,MAChBC,OAASI,EAAOJ,OAChBC,MAASG,EAAOH,UAuD5B,OAlDAb,EAAYiB,UAAY,SAASC,GAE9B,OAAO,IAAIlB,GACNG,OAASe,EAAEf,OACXO,OAAYQ,EAAER,OACdC,MAAWO,EAAEP,MACbC,OAAcM,EAAEN,OAChBC,MAAOK,EAAEL,SAIjBb,EAAYmB,QAAU,SAASC,GAC3B,OAAOpB,EAAYiB,WACfd,OAAUiB,EAAIC,kBACdX,OAAUU,EAAIE,kBACdX,MAAUS,EAAIG,iBACdX,OAAUQ,EAAII,kBACdX,MAAUO,EAAIK,oBAItBzB,EAAY0B,MAAQ,SAASC,EAAGP,GA0B5B,OAzBKA,IACDA,MAGAO,GAAMA,EAAGxB,SACTiB,EAAIC,kBAAoBM,EAAGxB,OAAOyB,YAGlCD,GAAMA,EAAGjB,SACTU,EAAIE,kBAAoBK,EAAGjB,OAAOkB,YAGlCD,GAAMA,EAAGhB,QACTS,EAAIG,iBAAmBI,EAAGhB,MAAMiB,YAGhCD,GAAMA,EAAGf,SACTQ,EAAII,kBAAoBG,EAAGf,OAAOgB,YAGlCD,GAAMA,EAAGd,QACTO,EAAIK,iBAAmBE,EAAGd,MAAMe,YAI7BR,GAGJxB,EAAQI,YAAcA","file":"../BorderImage.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-graphics-brushes/ImageBrush\",\r\n    \"./borders\",\r\n    \"./BorderImageOutset\",\r\n    \"./BorderImageRepeat\",\r\n    \"./BorderImageSlice\"\r\n],function(\r\n    langx,\r\n    BorderImageSlice,\r\n    borders,\r\n    ImageBrush,\r\n    BorderImageOutset,\r\n    BorderImageRepeat\r\n) {\r\n    var BorderImage = langx.klass({\r\n       \r\n        \"klassName\"  :   \"BorderImage\",\r\n\r\n        \"outset\"    :   {\r\n            type : BorderImageOutset,\r\n            \"get\" : function() {\r\n                return this._.outset;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.outset = v;\r\n            }            \r\n        },\r\n        \"repeat\" :   {\r\n            type : BorderImageRepeat,\r\n            \"get\" : function() {\r\n                return this._.repeat;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.repeat = v;\r\n            }            \r\n        },\r\n        \"slice\"    :   {\r\n            type : BorderImageSlice,\r\n            \"get\" : function() {\r\n                return this._.slice;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.slice = v;\r\n            }            \r\n        },\r\n        \"source\"  :   {\r\n            type : ImageBrush,\r\n            \"get\" : function() {\r\n                return this._.source;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.source = v;\r\n            }            \r\n        },\r\n        \"width\"    :   {\r\n            type : MeasureValue,\r\n            \"get\" : function() {\r\n                return this._.width;\r\n            },\r\n            \"set\" : function(v) {\r\n                this._.width = v;\r\n            }            \r\n        },\r\n        \"_construct\" : function(params){\r\n            this._ = {\r\n                outset : params.outset,\r\n                repeat : params.repeat,\r\n                slice  : params.slice,\r\n                source : params.source,\r\n                width  : params.width\r\n            };\r\n        }\r\n    });\r\n\r\n    BorderImage.fromPlain = function(o) {\r\n\r\n       return new BorderImage({\r\n            outset : o.outset,\r\n            repeat    : o.repeat,\r\n            slice    : o.slice,\r\n            source      : o.source,\r\n            width: o.width\r\n        });\r\n    };\r\n\r\n    BorderImage.fromCss = function(css) {\r\n        return BorderImage.fromPlain({\r\n            outset  : css.borderImageOutset,\r\n            repeat  : css.borderImageRepeat,\r\n            slice   : css.borderImageSlice,\r\n            source  : css.borderImageSource,\r\n            width   : css.borderImageWidth\r\n        });\r\n    };\r\n\r\n    BorderImage.toCss = function(bi,css) {\r\n        if (!css) {\r\n            css = {};\r\n        }\r\n\r\n        if (bi && bi.outset) {\r\n            css.borderImageOutset = bi.outset.toString();\r\n        }\r\n\r\n        if (bi && bi.repeat) {\r\n            css.borderImageRepeat = bi.repeat.toString();\r\n        }\r\n\r\n        if (bi && bi.slice) {\r\n            css.borderImageSlice = bi.slice.toString();\r\n        }\r\n\r\n        if (bi && bi.source) {\r\n            css.borderImageSource = bi.source.toString();        \r\n        }\r\n\r\n        if (bi && bi.width) {\r\n            css.borderImageWidth = bi.width.toString();        \r\n        }\r\n\r\n\r\n        return css;\r\n    };\r\n\r\n    return borders.BorderImage = BorderImage;\r\n    \r\n}); \r\n"]}